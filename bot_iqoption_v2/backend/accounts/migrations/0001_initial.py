# Generated by Django 4.2.7 on 2025-09-10 23:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email usado para login no sistema",
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "iq_email",
                    models.CharField(
                        blank=True,
                        help_text="Email da conta IQ Option (criptografado)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "iq_password",
                    models.TextField(
                        blank=True,
                        help_text="Senha da conta IQ Option (criptografada)",
                        null=True,
                    ),
                ),
                (
                    "preferred_account_type",
                    models.CharField(
                        choices=[("PRACTICE", "Demo"), ("REAL", "Real")],
                        default="PRACTICE",
                        help_text="Tipo de conta preferido para trading",
                        max_length=10,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active_trader", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "db_table": "accounts_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="TradingConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entry_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=3.0,
                        help_text="Valor de entrada padrão",
                        max_digits=10,
                    ),
                ),
                (
                    "stop_win",
                    models.DecimalField(
                        decimal_places=2,
                        default=50.0,
                        help_text="Stop Win",
                        max_digits=10,
                    ),
                ),
                (
                    "stop_loss",
                    models.DecimalField(
                        decimal_places=2,
                        default=70.0,
                        help_text="Stop Loss",
                        max_digits=10,
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("automatico", "Automático"),
                            ("digital", "Digital"),
                            ("binary", "Binário"),
                        ],
                        default="automatico",
                        max_length=20,
                    ),
                ),
                (
                    "analyze_moving_averages",
                    models.BooleanField(
                        default=False, help_text="Analisar médias móveis"
                    ),
                ),
                (
                    "moving_averages_candles",
                    models.IntegerField(
                        default=3, help_text="Número de velas para análise de médias"
                    ),
                ),
                ("use_martingale", models.BooleanField(default=True)),
                ("martingale_levels", models.IntegerField(default=1)),
                (
                    "martingale_factor",
                    models.DecimalField(decimal_places=2, default=2.0, max_digits=5),
                ),
                ("use_soros", models.BooleanField(default=True)),
                ("soros_levels", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trading_config",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração de Trading",
                "verbose_name_plural": "Configurações de Trading",
                "db_table": "accounts_trading_configuration",
            },
        ),
    ]
